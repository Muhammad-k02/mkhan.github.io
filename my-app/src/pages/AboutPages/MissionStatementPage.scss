@import url('https://fonts.googleapis.com/css2?family=Geist:wght@100..900&display=swap');
@import url('https://unpkg.com/normalize.css') layer(normalize);

@keyframes dim {
  0%,
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0.2;
  }
}

@keyframes bright {
  0% {
    opacity: 0.2;
  }
  50%,
  100% {
    opacity: 1;
  }
}

@keyframes brighten {
  0%,
  100% {
    opacity: 0.2;
  }
  50% {
    opacity: 1;
    filter: brightness(1.2);
  }
}

.mission-statement {
  --font-size-min: 14;
  --font-size-max: 20;
  --font-ratio-min: 1.1;
  --font-ratio-max: 1.33;
  --font-width-min: 375;
  --font-width-max: 1500;
  --dynamic-color: hsl(230, 70%, 50%);
  --dynamic-color-light: hsl(230, 70%, 70%);
  --dynamic-color-dark: hsl(230, 70%, 30%);
  
  position: relative;
  display: grid;
  place-items: center;
  background: black;
  min-height: 100svh;
  font-family: 'Geist', 'SF Pro Text', 'SF Pro Icons', 'AOS Icons',
    'Helvetica Neue', Helvetica, Arial, sans-serif, system-ui;
  color: white;
  transition: all 0.3s ease;

  * {
    transition: color 0.3s ease,
                background 0.3s ease,
                border-color 0.3s ease;
  }

  &::-webkit-scrollbar {
    width: 12px;
    transition: all 0.3s ease;
  }

  &::-webkit-scrollbar-track {
    background: var(--scrollbar-track-color, var(--dynamic-color-dark));
    transition: background 0.3s ease;
  }

  &::-webkit-scrollbar-thumb {
    background: var(--scrollbar-thumb-color, var(--dynamic-color));
    border-radius: 6px;
    border: 3px solid var(--scrollbar-track-color, var(--dynamic-color-dark));
    transition: all 0.3s ease;
  }

  &::before {
    --size: 45px;
    --line: color-mix(in hsl, var(--grid-line-color, var(--dynamic-color-light)), transparent 70%);
    content: '';
    height: 100svh;
    width: 100vw;
    position: fixed;
    background: linear-gradient(
          90deg,
          var(--line) 1px,
          transparent 1px var(--size)
        )
        50% 50% / var(--size) var(--size),
      linear-gradient(var(--line) 1px, transparent 1px var(--size)) 50% 50% /
        var(--size) var(--size);
    mask: linear-gradient(-20deg, transparent 50%, white);
    top: 0;
    transform-style: flat;
    pointer-events: none;
    z-index: -1;
    transition: background 0.3s ease;
  }

  &::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 5px;
    height: var(--scroll-percent, 0%);
    background: var(--dynamic-color);
    z-index: 1000;
    transition: height 0.1s ease;
  }

  header {
    min-height: 100svh;
    display: flex;
    place-items: center;
    width: 100%;
    padding-inline: 2rem;
    scroll-snap-align: start;
    position: relative;
    overflow: hidden;
    
    @media(min-width: 768px) {
      padding-inline: 5rem;
    }

    h1 {
      opacity: calc(
        clamp(
          0,
          1 - (
            (var(--scroll-amount, 0) - var(--scroll-section-1-start)) /
            (var(--scroll-section-1-end) - var(--scroll-section-1-start))
          ),
          1
        )
      );
      transform: translateY(calc(var(--scroll-amount, 0) * -0.1px));
      transition: transform 0.1s ease-out, opacity 0.1s ease-out;
      will-change: transform, opacity;
    }
  }

  main {
    width: 100%;
    scroll-snap-type: y proximity;
    scroll-behavior: smooth;
  }

  section:first-of-type {
    --font-level: 6;
    --font-size-min: 20;
    display: flex;
    line-height: 1.25;
    width: 100%;
    padding-left: 2rem;
    min-height: 300vh;
    
    @media(min-width: 768px) {
      padding-left: 5rem;
    }

    h2 {
      position: sticky;
      top: calc(50% - 0.5lh);
      font-size: inherit;
      margin: 0;
      display: inline-block;
      height: fit-content;
      font-weight: 600;
      opacity: calc(
        clamp(
          0,
          1 - (
            (var(--scroll-amount, 0) - var(--scroll-section-2-start)) /
            (var(--scroll-section-2-end) - var(--scroll-section-2-start))
          ),
          1
        )
      );
      transform: translateY(calc(var(--scroll-amount, 0) * -0.05px));
      transition: transform 0.1s ease-out, opacity 0.1s ease-out;
      will-change: transform, opacity;
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  section:last-of-type {
    min-height: 100svh;
    display: flex;
    place-items: center;
    width: 100%;
    justify-content: center;
    scroll-snap-align: start;

    h2 {
      --font-level: 6;
      --font-size-min: 20;
      opacity: calc(
        clamp(
          0,
          1 - (
            (var(--scroll-amount, 0) - var(--scroll-section-4-start)) /
            (var(--scroll-section-4-end) - var(--scroll-section-4-start))
          ),
          1
        )
      );
      transform: translateY(calc(var(--scroll-amount, 0) * -0.02px));
      transition: transform 0.1s ease-out, opacity 0.1s ease-out;
      will-change: transform, opacity;
    }
  }

  ul {
    font-weight: 600;
    padding-inline: 0;
    margin: 0 0 0 auto;
    list-style-type: none;
    width: 60%;
    padding-right: 5rem;
    padding-block: 100vh;
    view-timeline: --list;
    opacity: calc(
      clamp(
        0,
        1 - (
          (var(--scroll-amount, 0) - var(--scroll-section-3-start)) /
          (var(--scroll-section-3-end) - var(--scroll-section-3-start))
        ),
        1
      )
    );
    transform: translateY(calc(var(--scroll-amount, 0) * -0.03px));
    transition: transform 0.1s ease-out, opacity 0.1s ease-out;
    will-change: transform, opacity;
  }

  li {
    scroll-snap-align: center;
    padding: 1rem 0;
    opacity: 0.2;
    animation-name: brighten;
    animation-fill-mode: both;
    animation-timing-function: ease;
    animation-range: cover calc(50% - 1lh) calc(50% + 1lh);
    animation-timeline: view();
    color: var(--item-color);
    transition: color 0.3s ease, transform 0.3s ease;
    transform: translateX(20px);

    &.visible {
      opacity: 1;
      transform: translateX(0);
    }

    &:first-of-type {
      opacity: 1;
      animation-name: dim;
    }
    
    &:last-of-type {
      opacity: 0.2;
      animation-name: bright;
    }
  }

  h1 {
    --font-size-min: 24;
    --font-level: 8;
    text-wrap: pretty;
    line-height: 0.8;
    margin: 0;
    background: linear-gradient(
      var(--dynamic-color) 60%,
      var(--dynamic-color-dark)
    );
    background-clip: text;
    color: transparent;
    transition: background 0.3s ease;
  }

  h2,
  li:last-of-type {
    background: linear-gradient(
      var(--dynamic-color) 50%,
      var(--dynamic-color-dark)
    );
    background-clip: text;
    color: transparent;
    transition: background 0.3s ease;
  }

  footer {
    padding-block: 2rem;
    opacity: 0.5;
    color: var(--dynamic-color-light);
    transition: color 0.3s ease;
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }

  :where(.fluid) {
    --fluid-min: calc(
      var(--font-size-min) * pow(var(--font-ratio-min), var(--font-level, 0))
    );
    --fluid-max: calc(
      var(--font-size-max) * pow(var(--font-ratio-max), var(--font-level, 0))
    );
    --fluid-preferred: calc(
      (var(--fluid-max) - var(--fluid-min)) /
        (var(--font-width-max) - var(--font-width-min))
    );
    --fluid-type: clamp(
      (var(--fluid-min) / 16) * 1rem,
      ((var(--fluid-min) / 16) * 1rem) -
        (((var(--fluid-preferred) * var(--font-width-min)) / 16) * 1rem) +
        (var(--fluid-preferred) * var(--variable-unit, 100vi)),
      (var(--fluid-max) / 16) * 1rem
    );
    font-size: var(--fluid-type);
  }

  .scroll-indicator {
    position: fixed;
    bottom: 2rem;
    left: 50%;
    transform: translateX(-50%);
    opacity: 1;
    transition: opacity 0.3s ease, transform 0.3s ease;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    z-index: 100;
    
    &.hidden {
      opacity: 0;
      transform: translate(-50%, 20px);
      pointer-events: none;
    }

    .scroll-text {
      font-size: 0.875rem;
      text-transform: uppercase;
      letter-spacing: 0.1em;
      color: var(--dynamic-color-light);
      font-weight: 500;
    }

    .scroll-icon {
      width: 24px;
      height: 40px;
      border: 2px solid var(--dynamic-color);
      border-radius: 12px;
      position: relative;
      display: flex;
      justify-content: center;
      
      &::before {
        content: '';
        width: 4px;
        height: 8px;
        background: var(--dynamic-color);
        border-radius: 2px;
        position: absolute;
        top: 6px;
        animation: scrollDot 1.5s cubic-bezier(0.65, 0, 0.35, 1) infinite;
      }
    }
  }

  @keyframes scrollDot {
    0% {
      transform: translateY(0);
      opacity: 1;
    }
    50% {
      opacity: 1;
    }
    100% {
      transform: translateY(15px);
      opacity: 0;
    }
  }

  // Scroll animation configuration
  --scroll-section-1-start: 0;
  --scroll-section-1-end: 800;
  --scroll-section-2-start: 400;
  --scroll-section-2-end: 1200;
  --scroll-section-3-start: 800;
  --scroll-section-3-end: 2000;
  --scroll-section-4-start: 1600;
  --scroll-section-4-end: 2400;
}

div.tp-dfwv {
  position: fixed;
  top: 1rem;
  right: 1rem;
  z-index: 1000;
}

* {
  scrollbar-width: thin;
  scrollbar-color: var(--scrollbar-thumb-color, var(--dynamic-color)) var(--scrollbar-track-color, var(--dynamic-color-dark));
} 